(**************************************************************************)
(*                                                                        *)
(*                                 OCaml                                  *)
(*                                                                        *)
(*             Sebastien Hinderer, projet Gallium, INRIA Paris            *)
(*                                                                        *)
(*   Copyright 2016 Institut National de Recherche en Informatique et     *)
(*     en Automatique.                                                    *)
(*                                                                        *)
(*   All rights reserved.  This file is distributed under the terms of    *)
(*   the GNU Lesser General Public License version 2.1, with the          *)
(*   special exception on linking described in the file LICENSE.          *)
(*                                                                        *)
(**************************************************************************)

(* The configuration module for ocamltest *)

let arch = {|@arch@|}

let afl_instrument = @afl@

let asm = {|@AS@|}

let cc = {|@CC@|}

let cflags = {|@oc_cflags@|}

let ccomptype = {|@ccomptype@|}

let shared_libraries = @supports_shared_libraries@

let libunix =
  if @with_lib_unix@ then
    Some Sys.win32
  else
    None

let systhreads = @systhread_support@

let str = @with_lib_str@

let objext = {|@OBJEXT@|}

let libext = {|@libext@|}

let asmext = {|@S@|}

let system = {|@system@|}

let c_preprocessor =
  if ccomptype = "cl" then
    (* Ignore stderr from cl /E (see PR#1503) *)
    {|@CPP@ 2> nul|}
  else
    {|@CPP@|}

let ocamlsrcdir = {|@ocamlsrcdir@|}

let flambda = @flambda@

let ocamlc_default_flags = ""
let ocamlopt_default_flags = ""

let safe_string = @force_safe_string@

let flat_float_array = @flat_float_array@

let ocamldoc = @with_ocamldoc@

let ocamldebug = @with_ocamldebug@

let native_compiler = @native_compiler@

let native_dynlink = @natdynlink@

let shared_library_cflags = {|@sharedlib_cflags@|}

let sharedobjext = {|@SO@|}

let csc = {|@csc@|}

let csc_flags = {|@csc_flags@|}

let exe = {|@exeext@|}

let mkdll = {|@mksharedlib@ @LDFLAGS@|}
let mkexe = {|@mkexe_config@|}

let bytecc_libs = {|@bytecclibs@|}

let nativecc_libs = {|@nativecclibs@|}

let windows_unicode = @windows_unicode@ != 0

let function_sections = @function_sections@

let instrumented_runtime = @instrumented_runtime@

let naked_pointers = @naked_pointers@
