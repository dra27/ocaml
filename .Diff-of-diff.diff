--- a	2023-09-28 18:43:48.659976913 +0100
+++ b	2023-09-28 18:43:48.663977079 +0100
@@ -77,30 +77,30 @@
 diff --git a/testsuite/tests/callback/test_signalhandler.ml b/testsuite/tests/callback/test_signalhandler.ml
 --- a/testsuite/tests/callback/test_signalhandler.ml
 +++ b/testsuite/tests/callback/test_signalhandler.ml
-@@ -52,17 +52,17 @@ let sighandler signo =
-   (* Thoroughly wipe the minor heap *)
+@@ -53,17 +53,17 @@ let sighandler signo =
    ignore (tak (18, 12, 6))
  
+ external raise_sigusr1 : unit -> unit = "raise_sigusr1" [@@noalloc]
 -external unix_getpid : unit -> int = "unix_getpid" [@@noalloc]
 -external unix_kill : int -> int -> unit = "unix_kill" [@@noalloc]
-+external mykill : int -> int -> unit = "mykill" [@@noalloc]
++(*external mykill : int -> int -> unit = "mykill" [@@noalloc]*)
  
  let callbacksig () =
--  let pid = unix_getpid() in
-+  let pid = Unix.getpid () in
+-  let _pid = unix_getpid() in
++  let _pid = Unix.getpid() in
    (* Allocate a block in the minor heap *)
    let s = String.make 5 'b' in
    (* Send a signal to self.  We want s to remain in a register and
 -     not be spilled on the stack, hence we declare unix_kill
 -     [@@noalloc]. *)
--  unix_kill pid Sys.sigusr1;
+-  (*unix_kill pid Sys.sigusr1;*)
 +     not be spilled on the stack, hence we use [mykill]
 +     (which is [@@noalloc] and doesn't trigger signal handling)
 +     instead of [Unix.kill]. *)
-+  mykill pid Sys.sigusr1;
++  (*mykill pid Sys.sigusr1;*)
+   raise_sigusr1 ();
    (* Allocate some more so that the signal will be tested *)
    let u = (s, s) in
-   fst u
 diff --git a/testsuite/tests/callback/test_signalhandler.mli b/testsuite/tests/callback/test_signalhandler.mli
 deleted file mode 100644
 --- a/testsuite/tests/callback/test_signalhandler.mli
