--- a	2023-09-28 18:47:52.149346964 +0100
+++ b	2023-09-28 18:47:52.169347684 +0100
@@ -153,10 +153,6 @@
  - #12109: Pack parameters to unification in unification_environment
    (Takafumi Saikawa and Jacques Garrigue, review by Richard Eisenberg)
  
-diff --git a/boot/ocamlc b/boot/ocamlc
-Binary files a/boot/ocamlc and b/boot/ocamlc differ
-diff --git a/boot/ocamllex b/boot/ocamllex
-Binary files a/boot/ocamllex and b/boot/ocamllex differ
 diff --git a/bytecomp/bytelink.ml b/bytecomp/bytelink.ml
 --- a/bytecomp/bytelink.ml
 +++ b/bytecomp/bytelink.ml
@@ -674,7 +670,7 @@
    out_int 0
  and slot_for_c_prim name =
    enter (Reloc_primitive name);
-@@ -430,7 +441,8 @@ let to_file outchan unit_name objfile ~required_globals code =
+@@ -434,7 +445,8 @@ let to_file outchan unit_name objfile ~required_globals code =
        cu_imports = Env.imports();
        cu_primitives = List.map Primitive.byte_name
                                 !Translmod.primitive_declarations;
@@ -1169,7 +1165,7 @@
 diff --git a/otherlibs/dynlink/byte/dynlink.ml b/otherlibs/dynlink/byte/dynlink.ml
 --- a/otherlibs/dynlink/byte/dynlink.ml
 +++ b/otherlibs/dynlink/byte/dynlink.ml
-@@ -29,28 +29,27 @@ module Bytecode = struct
+@@ -32,28 +32,27 @@ module Bytecode = struct
    module Unit_header = struct
      type t = Cmo_format.compilation_unit
  
@@ -1205,7 +1201,7 @@
  
      let unsafe_module (t : t) = t.cu_primitives <> []
    end
-@@ -75,20 +74,22 @@ module Bytecode = struct
+@@ -78,20 +77,22 @@ module Bytecode = struct
      Misc.fatal_error "Should never be called for bytecode dynlink"
  
    let fold_initial_units ~init ~f =
@@ -1233,7 +1229,7 @@
        init
        !default_crcs
  
-@@ -118,9 +119,11 @@ module Bytecode = struct
+@@ -121,9 +122,11 @@ module Bytecode = struct
          with Symtable.Error error ->
            let new_error : DT.linking_error =
              match error with
@@ -1247,7 +1243,7 @@
              | Symtable.Wrong_vm _ -> assert false
            in
            raise (DT.Error (Linking_error (file_name, new_error)))
-@@ -129,7 +132,8 @@ module Bytecode = struct
+@@ -132,7 +135,8 @@ module Bytecode = struct
             digest of file contents + unit name.
             Unit name is needed for .cma files, which produce several code
             fragments. *)
@@ -1257,7 +1253,7 @@
          let events =
            if compunit.cu_debug = 0 then [| |]
            else begin
-@@ -192,8 +196,10 @@ module Bytecode = struct
+@@ -195,8 +199,10 @@ module Bytecode = struct
        raise (DT.Error (Cannot_open_dynamic_library exc))
  
    let unsafe_get_global_value ~bytecode_or_asm_symbol =
@@ -1273,7 +1269,7 @@
 diff --git a/otherlibs/dynlink/dynlink_common.ml b/otherlibs/dynlink/dynlink_common.ml
 --- a/otherlibs/dynlink/dynlink_common.ml
 +++ b/otherlibs/dynlink/dynlink_common.ml
-@@ -126,18 +126,18 @@ module Make (P : Dynlink_platform_intf.S) = struct
+@@ -135,18 +135,18 @@ module Make (P : Dynlink_platform_intf.S) = struct
        P.fold_initial_units
          ~init:(String.Map.empty, String.Map.empty, String.Set.empty)
          ~f:(fun (ifaces, implems, defined_symbols)
@@ -1311,7 +1307,7 @@
 diff --git a/otherlibs/dynlink/native/dynlink.ml b/otherlibs/dynlink/native/dynlink.ml
 --- a/otherlibs/dynlink/native/dynlink.ml
 +++ b/otherlibs/dynlink/native/dynlink.ml
-@@ -73,7 +73,7 @@ module Native = struct
+@@ -75,7 +75,7 @@ module Native = struct
            | None -> None
            | Some _ as crco -> Some (crco, DT.Check_inited !rank)
          in
@@ -1327,11 +1323,11 @@
  Called from Test10_plugin.g in file "test10_plugin.ml", line 3, characters 2-21
  Called from Test10_plugin.f in file "test10_plugin.ml", line 6, characters 2-6
  Called from Test10_plugin in file "test10_plugin.ml", line 10, characters 2-6
--Called from Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 148, characters 16-25
--Re-raised at Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 150, characters 6-137
-+Called from Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 152, characters 16-25
-+Re-raised at Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 154, characters 6-137
- Called from Dynlink_common.Make.load.(fun) in file "otherlibs/dynlink/dynlink_common.ml", line 361, characters 11-54
+-Called from Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 151, characters 16-25
+-Re-raised at Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 153, characters 6-137
++Called from Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 155, characters 16-25
++Re-raised at Dynlink.Bytecode.run in file "otherlibs/dynlink/dynlink.ml", line 157, characters 6-137
+ Called from Dynlink_common.Make.load.(fun) in file "otherlibs/dynlink/dynlink_common.ml", line 370, characters 11-54
  Called from Stdlib__List.iter in file "list.ml", line 112, characters 12-15
  Called from Stdlib__Fun.protect in file "fun.ml", line 33, characters 8-15
 diff --git a/testsuite/tests/tool-dumpobj/test.reference b/testsuite/tests/tool-dumpobj/test.reference
@@ -1457,7 +1453,7 @@
      with Not_found ->
        print_string "<no reloc>"
      end;
-@@ -448,10 +474,15 @@ let print_code ic len =
+@@ -450,10 +476,15 @@ let print_code ic len =
  let print_reloc (info, pos) =
    printf "    %d    (%d)    " pos (pos/4);
    match info with
@@ -1477,7 +1473,7 @@
  
  (* Print a .cmo file *)
  
-@@ -488,7 +519,7 @@ let dump_exe ic =
+@@ -490,7 +521,7 @@ let dump_exe ic =
    let sym_table : Symtable.global_map =
      Bytesections.read_section_struct toc ic Bytesections.Name.SYMB in
    Symtable.iter_global_map
