--- a	2023-09-28 18:46:50.575095192 +0100
+++ b	2023-09-28 18:46:50.591095786 +0100
@@ -62,7 +62,7 @@
  
  (* Array indexing *)
  
-@@ -2063,7 +2059,7 @@ let offsetref n arg dbg =
+@@ -2067,7 +2063,7 @@ let offsetref n arg dbg =
               dbg)))
  
  let arraylength kind arg dbg =
@@ -71,7 +71,7 @@
    match (kind : Lambda.array_kind) with
      Pgenarray ->
        let len =
-@@ -2263,7 +2259,7 @@ let arrayref_safe kind arg1 arg2 dbg =
+@@ -2272,7 +2268,7 @@ let arrayref_safe kind arg1 arg2 dbg =
    | Pgenarray ->
        bind "index" arg2 (fun idx ->
        bind "arr" arg1 (fun arr ->
@@ -80,7 +80,7 @@
          if wordsize_shift = numfloat_shift then
            Csequence(
              make_checkbound dbg [addr_array_length_shifted hdr dbg; idx],
-@@ -2290,7 +2286,7 @@ let arrayref_safe kind arg1 arg2 dbg =
+@@ -2299,7 +2295,7 @@ let arrayref_safe kind arg1 arg2 dbg =
              Csequence(
                make_checkbound dbg [
                  addr_array_length_shifted
@@ -89,7 +89,7 @@
                addr_array_ref arr idx dbg)))
        | Pintarray ->
            bind "index" arg2 (fun idx ->
-@@ -2298,7 +2294,7 @@ let arrayref_safe kind arg1 arg2 dbg =
+@@ -2307,7 +2303,7 @@ let arrayref_safe kind arg1 arg2 dbg =
              Csequence(
                make_checkbound dbg [
                  addr_array_length_shifted
@@ -98,7 +98,7 @@
                int_array_ref arr idx dbg)))
        | Pfloatarray ->
            box_float dbg (
-@@ -2307,7 +2303,7 @@ let arrayref_safe kind arg1 arg2 dbg =
+@@ -2316,7 +2312,7 @@ let arrayref_safe kind arg1 arg2 dbg =
                Csequence(
                  make_checkbound dbg [
                    float_array_length_shifted
@@ -107,7 +107,7 @@
                    idx],
                  unboxed_float_array_ref arr idx dbg))))
  
-@@ -2366,7 +2362,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
+@@ -2375,7 +2371,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
        bind "newval" arg3 (fun newval ->
        bind "index" arg2 (fun idx ->
        bind "arr" arg1 (fun arr ->
@@ -116,7 +116,7 @@
          if wordsize_shift = numfloat_shift then
            Csequence(
              make_checkbound dbg [addr_array_length_shifted hdr dbg; idx],
-@@ -2398,7 +2394,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
+@@ -2407,7 +2403,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
          Csequence(
            make_checkbound dbg [
              addr_array_length_shifted
@@ -125,7 +125,7 @@
              idx],
            addr_array_set arr idx newval dbg))))
    | Pintarray ->
-@@ -2408,7 +2404,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
+@@ -2417,7 +2413,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
          Csequence(
            make_checkbound dbg [
              addr_array_length_shifted
@@ -134,7 +134,7 @@
              idx],
            int_array_set arr idx newval dbg))))
    | Pfloatarray ->
-@@ -2418,7 +2414,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
+@@ -2427,7 +2423,7 @@ let arrayset_safe kind arg1 arg2 arg3 dbg =
          Csequence(
            make_checkbound dbg [
              float_array_length_shifted
@@ -193,7 +193,7 @@
  AC_SUBST([frame_pointers])
  AC_SUBST([flambda])
  AC_SUBST([flambda_invariants])
-@@ -424,15 +422,11 @@ AC_ARG_WITH([target-bindir],
+@@ -435,15 +433,11 @@ AC_ARG_WITH([target-bindir],
  
  AC_ARG_ENABLE([reserved-header-bits],
    [AS_HELP_STRING([--enable-reserved-header-bits=BITS],
@@ -213,7 +213,7 @@
  
  AC_ARG_ENABLE([stdlib-manpages],
    [AS_HELP_STRING([--disable-stdlib-manpages],
-@@ -2014,8 +2008,7 @@ AS_IF([test x"$enable_frame_pointers" = "xyes"],
+@@ -2064,8 +2058,7 @@ AS_IF([test x"$enable_naked_pointers_checker" = "xyes" ],
  ## Check for mmap support for huge pages and contiguous heap
  OCAML_MMAP_SUPPORTS_HUGE_PAGES
  
