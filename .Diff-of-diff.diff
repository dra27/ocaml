--- a	2023-09-28 18:45:46.156660687 +0100
+++ b	2023-09-28 18:45:46.160660840 +0100
@@ -1,23 +1,14 @@
 diff --git a/otherlibs/systhreads/thread.ml b/otherlibs/systhreads/thread.ml
 --- a/otherlibs/systhreads/thread.ml
 +++ b/otherlibs/systhreads/thread.ml
-@@ -18,8 +18,6 @@
- type t
- 
- external thread_initialize : unit -> unit = "caml_thread_initialize"
--external thread_initialize_domain : unit -> unit =
--            "caml_thread_initialize_domain"
- external thread_cleanup : unit -> unit = "caml_thread_cleanup"
- external thread_new : (unit -> unit) -> t = "caml_thread_new"
- external thread_uncaught_exception : exn -> unit =
-@@ -86,7 +84,6 @@ let preempt_signal =
- 
- let () =
+@@ -103,7 +103,6 @@ let () =
+   Sys.set_signal preempt_signal (Sys.Signal_handle preempt);
    thread_initialize ();
+ (* BACKPORT
 -  Domain.at_each_spawn thread_initialize_domain;
    Sys.set_signal preempt_signal (Sys.Signal_handle preempt);
+ *)
    (* Callback in [caml_shutdown], when the last domain exits. *)
-   Callback.register "Thread.at_shutdown" (fun () ->
 diff --git a/stdlib/domain.ml b/stdlib/domain.ml
 --- a/stdlib/domain.ml
 +++ b/stdlib/domain.ml
@@ -80,7 +71,7 @@
 diff --git a/stdlib/format.ml b/stdlib/format.ml
 --- a/stdlib/format.ml
 +++ b/stdlib/format.ml
-@@ -1051,6 +1051,7 @@ let std_formatter_key = DLS.new_key (fun () ->
+@@ -1052,6 +1052,7 @@ let std_formatter_key = DLS.new_key (fun () ->
    ppf.pp_out_newline <- display_newline ppf;
    ppf.pp_out_spaces <- display_blanks ppf;
    ppf.pp_out_indent <- display_indent ppf;
@@ -88,71 +79,30 @@
    ppf)
  let _ = DLS.set std_formatter_key std_formatter
  
-@@ -1062,6 +1063,7 @@ let err_formatter_key = DLS.new_key (fun () ->
+@@ -1063,6 +1064,7 @@ let err_formatter_key = DLS.new_key (fun () ->
    ppf.pp_out_newline <- display_newline ppf;
    ppf.pp_out_spaces <- display_blanks ppf;
    ppf.pp_out_indent <- display_indent ppf;
 +  Domain.at_exit (pp_print_flush ppf);
    ppf)
  let _ = DLS.set err_formatter_key err_formatter
- 
-@@ -1476,7 +1478,6 @@ let () = at_exit flush_standard_formatters
- 
+ *)
+@@ -1491,7 +1493,6 @@ let () = at_exit flush_standard_formatters
+ (* BACKPORT
  let () = Domain.before_first_spawn (fun () ->
    flush_standard_formatters ();
 -
    let fs = pp_get_formatter_out_functions std_formatter () in
    pp_set_formatter_out_functions std_formatter
      {fs with out_string = buffered_out_string std_buf_key;
-@@ -1486,5 +1487,4 @@ let () = Domain.before_first_spawn (fun () ->
+@@ -1501,6 +1502,5 @@ let () = Domain.before_first_spawn (fun () ->
    pp_set_formatter_out_functions err_formatter
      {fs with out_string = buffered_out_string err_buf_key;
               out_flush = buffered_out_flush Stdlib.stderr err_buf_key};
 -
 -  Domain.at_each_spawn (fun _ -> Domain.at_exit flush_standard_formatters))
 +)
-diff --git a/testsuite/tests/backtrace/backtrace_systhreads.reference b/testsuite/tests/backtrace/backtrace_systhreads.reference
---- a/testsuite/tests/backtrace/backtrace_systhreads.reference
-+++ b/testsuite/tests/backtrace/backtrace_systhreads.reference
-@@ -2,24 +2,24 @@ Thread 2 killed on uncaught exception Failure("0")
- Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
- Called from Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 14, characters 6-37
- Re-raised at Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 18, characters 5-14
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 3 killed on uncaught exception Failure("1")
- Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
- Called from Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 14, characters 6-37
- Re-raised at Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 18, characters 5-14
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 4 killed on uncaught exception Failure("2")
- Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
- Called from Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 14, characters 6-37
- Re-raised at Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 18, characters 5-14
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 5 killed on uncaught exception Failure("3")
- Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
- Called from Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 14, characters 6-37
- Re-raised at Backtrace_systhreads.thread_func in file "backtrace_systhreads.ml", line 18, characters 5-14
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 1 killed on uncaught exception Failure("backtrace")
- Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
- Called from Backtrace_systhreads.thread_backtrace in file "backtrace_systhreads.ml", line 22, characters 6-27
- Re-raised at Backtrace_systhreads.thread_backtrace in file "backtrace_systhreads.ml", line 26, characters 5-14
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
-diff --git a/testsuite/tests/backtrace/callstack.reference b/testsuite/tests/backtrace/callstack.reference
---- a/testsuite/tests/backtrace/callstack.reference
-+++ b/testsuite/tests/backtrace/callstack.reference
-@@ -12,4 +12,4 @@ Raised by primitive operation at Callstack.f0 in file "callstack.ml", line 11, c
- Called from Callstack.f1 in file "callstack.ml", line 12, characters 27-32
- Called from Callstack.f2 in file "callstack.ml", line 13, characters 27-32
- Called from Callstack.f3 in file "callstack.ml", line 14, characters 27-32
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
+ *)
 diff --git a/testsuite/tests/lib-format/domains.ml b/testsuite/tests/lib-format/domains.ml
 new file mode 100644
 --- /dev/null
@@ -187,27 +137,3 @@
 +++ b/testsuite/tests/lib-format/domains.reference
 @@ -0,0 +1 @@
 +0123
-diff --git a/testsuite/tests/lib-threads/uncaught_exception_handler.reference b/testsuite/tests/lib-threads/uncaught_exception_handler.reference
---- a/testsuite/tests/lib-threads/uncaught_exception_handler.reference
-+++ b/testsuite/tests/lib-threads/uncaught_exception_handler.reference
-@@ -1,15 +1,15 @@
- Thread 1 killed on uncaught exception Uncaught_exception_handler.CallbackExn
- Raised at Uncaught_exception_handler.fn in file "uncaught_exception_handler.ml", line 28, characters 12-113
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- [thread 2] caught Uncaught_exception_handler.CallbackExn
- Raised at Uncaught_exception_handler.fn in file "uncaught_exception_handler.ml", line 28, characters 12-113
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 2 killed on uncaught exception Uncaught_exception_handler.CallbackExn
- Raised at Uncaught_exception_handler.fn in file "uncaught_exception_handler.ml", line 28, characters 12-113
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
- Thread 2 uncaught exception handler raised Uncaught_exception_handler.UncaughtHandlerExn
- Raised at Uncaught_exception_handler.handler in file "uncaught_exception_handler.ml", line 26, characters 2-17
--Called from Thread.create.(fun) in file "thread.ml", line 59, characters 10-41
-+Called from Thread.create.(fun) in file "thread.ml", line 57, characters 10-41
- [thread 3] caught Uncaught_exception_handler.CallbackExn
- Raised at Uncaught_exception_handler.fn in file "uncaught_exception_handler.ml", line 28, characters 12-113
--Called from Thread.create.(fun) in file "thread.ml", line 50, characters 8-14
-+Called from Thread.create.(fun) in file "thread.ml", line 48, characters 8-14
