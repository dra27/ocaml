--- a	2023-09-28 18:46:03.957342041 +0100
+++ b	2023-09-28 18:46:03.985343108 +0100
@@ -35,7 +35,7 @@
 diff --git a/configure.ac b/configure.ac
 --- a/configure.ac
 +++ b/configure.ac
-@@ -2242,13 +2242,13 @@ AC_CONFIG_COMMANDS_PRE([
+@@ -2292,13 +2292,13 @@ AC_CONFIG_COMMANDS_PRE([
  
  # Just before config.status is generated, determine the final values for MKEXE,
  # MKDLL, MKMAINDLL and MKEXE_VIA_CC. The final variables controlling these are:
@@ -183,10 +183,19 @@
  - A quoted extension syntax for ppxs.
  - Many quality of life improvements
  - Many bug fixes.
+diff --git a/runtime/HACKING.adoc b/runtime/HACKING.adoc
+--- a/runtime/HACKING.adoc
++++ b/runtime/HACKING.adoc
+@@ -153,4 +153,4 @@ TODO: I would be curious to know!
+ (For the brave there are some scripts in
+ link:../tools/ci/inria/sanitizers/script[], but you probably don't
+ want to run them directly, in particular they will `git clean -xfd`,
+-destroying changed/uncommited files in your development repository!)
++destroying changed/uncommitted files in your development repository!)
 diff --git a/stdlib/camlinternalLazy.ml b/stdlib/camlinternalLazy.ml
 --- a/stdlib/camlinternalLazy.ml
 +++ b/stdlib/camlinternalLazy.ml
-@@ -83,7 +83,7 @@ let force_lazy_block blk = force_gen_lazy_block ~only_val:false blk
+@@ -86,7 +86,7 @@ let force_lazy_block blk = force_gen_lazy_block ~only_val:false blk
  let force_gen ~only_val (lzv : 'arg lazy_t) =
    (* Using [Sys.opaque_identity] prevents two potential problems:
       - If the value is known to have Forward_tag, then it could have been
@@ -222,7 +231,7 @@
 diff --git a/testsuite/tests/frame-pointers/c_call.ml b/testsuite/tests/frame-pointers/c_call.ml
 --- a/testsuite/tests/frame-pointers/c_call.ml
 +++ b/testsuite/tests/frame-pointers/c_call.ml
-@@ -17,9 +17,9 @@ let[@inline never] f () =
+@@ -19,9 +19,9 @@ let[@inline never] f () =
    (* Check backtrace through caml_c_call_stack_args *)
    fp_backtrace_many_args 1 2 3 4 5 6 7 8 9 10 11;
    (* Check backtrace through caml_c_call.
