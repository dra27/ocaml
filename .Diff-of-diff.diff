--- a	2023-09-28 18:47:47.581182237 +0100
+++ b	2023-09-28 18:47:47.601182959 +0100
@@ -1,34 +1,21 @@
 diff --git a/Changes b/Changes
 --- a/Changes
 +++ b/Changes
-@@ -890,6 +890,9 @@ OCaml 5.1.0
+@@ -890,6 +890,10 @@ OCaml 5.1.0
  - #12252: Fix shared library build error on RISC-V.
    (Edwin Török, review by Nicolás Ojeda Bär and Xavier Leroy)
  
 +- #12277: ARM64, fix a potential assembler error for very large functions by
 +  emitting stack reallocation code before the body of the function.
 +  (Xavier Leroy, review by KC Sivaramakrishnan)
- 
++
  OCaml 5.0.0 (15 December 2022)
  ------------------------------
+ 
 diff --git a/asmcomp/arm64/emit.mlp b/asmcomp/arm64/emit.mlp
 --- a/asmcomp/arm64/emit.mlp
 +++ b/asmcomp/arm64/emit.mlp
-@@ -1069,13 +1069,6 @@ let fundecl fundecl =
-   `	.align	3\n`;
-   `	.globl	{emit_symbol fundecl.fun_name}\n`;
-   emit_symbol_type emit_symbol fundecl.fun_name "function";
--  `{emit_symbol fundecl.fun_name}:\n`;
--  emit_debug_info fundecl.fun_dbg;
--  cfi_startproc();
--  let num_call_gc, num_check_bound =
--    num_call_gc_and_check_bound_points env
--  in
--
-   (* Dynamic stack checking *)
-   let stack_threshold_size = Config.stack_threshold * 8 in (* bytes *)
-   let { max_frame_size; contains_nontail_calls} =
-@@ -1084,23 +1077,39 @@ let fundecl fundecl =
+@@ -1136,26 +1136,42 @@ let fundecl fundecl =
    in
    let handle_overflow, stack_check_size =
      if contains_nontail_calls || max_frame_size >= stack_threshold_size then begin
@@ -67,19 +54,23 @@
 +  let num_call_gc, num_check_bound =
 +    num_call_gc_and_check_bound_points env
    in
+ *)
 -
    let max_out_of_line_code_offset =
+ (* BACKPORT
      stack_check_size +
+ *)
 -    max_out_of_line_code_offset ~num_call_gc
 -      ~num_check_bound
 +    max_out_of_line_code_offset ~num_call_gc ~num_check_bound
    in
  
    BR.relax fundecl ~max_out_of_line_code_offset;
-@@ -1111,21 +1120,6 @@ let fundecl fundecl =
+@@ -1166,23 +1182,6 @@ let fundecl fundecl =
    assert (List.length env.call_gc_sites = num_call_gc);
    assert (List.length env.bound_error_sites = num_check_bound);
  
+-(* BACKPORT
 -  begin match handle_overflow with
 -  | None -> ()
 -  | Some (overflow,ret) -> begin
@@ -94,6 +85,7 @@
 -      `	b	{emit_label ret}\n`
 -    end
 -  end;
+-*)
 -
    cfi_endproc();
    emit_symbol_type emit_symbol fundecl.fun_name "function";
