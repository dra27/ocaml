--- a	2023-09-28 18:43:53.268167248 +0100
+++ b	2023-09-28 18:43:53.284167908 +0100
@@ -539,7 +539,7 @@
 diff --git a/otherlibs/unix/signals.c b/otherlibs/unix/signals.c
 --- a/otherlibs/unix/signals.c
 +++ b/otherlibs/unix/signals.c
-@@ -39,19 +39,18 @@ static void decode_sigset(value vset, sigset_t * set)
+@@ -45,26 +45,25 @@ static void decode_sigset(value vset, sigset_t * set)
  
  static value encode_sigset(sigset_t * set)
  {
@@ -551,18 +551,28 @@
 -  Begin_root(res)
 -    for (i = 1; i < NSIG; i++)
 -      if (sigismember(set, i) > 0) {
++  for (i = 1; i < NSIG; i++)
++    if (sigismember(set, i) > 0) {
+ /* BACKPORT BEGIN */
+-        value newcons = caml_alloc_small(2, 0);
+-        Field(newcons, 0) = Val_int(caml_rev_convert_signal_number(i));
+-        Field(newcons, 1) = res;
++      value newcons = caml_alloc_small(2, 0);
++      Field(newcons, 0) = Val_int(caml_rev_convert_signal_number(i));
++      Field(newcons, 1) = res;
+ /* BACKPORT END */
+ #if 0 /* BACKPORT */
 -        value newcons = caml_alloc_2(0,
 -          Val_int(caml_rev_convert_signal_number(i)),
 -          res);
++      value newcons = caml_alloc_2(0,
++        Val_int(caml_rev_convert_signal_number(i)),
++        res);
+ #endif
 -        res = newcons;
 -      }
 -  End_roots();
 -  return res;
-+  for (i = 1; i < NSIG; i++)
-+    if (sigismember(set, i) > 0) {
-+      value newcons = caml_alloc_2(0,
-+        Val_int(caml_rev_convert_signal_number(i)),
-+        res);
 +      res = newcons;
 +    }
 +  CAMLreturn(res);
