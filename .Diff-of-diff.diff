--- a	2023-09-28 18:43:54.420214740 +0100
+++ b	2023-09-28 18:43:54.436215400 +0100
@@ -13,7 +13,7 @@
  ### Internal/compiler-libs changes:
  
  - #10878, #10909: restore flambda after the Multicore merge.
-@@ -300,7 +305,7 @@ OCaml 4.14.0
+@@ -306,7 +311,7 @@ OCaml 4.14.0
  
  - #10951: Introduce the Thread.Exit exception as an alternative way to
    terminate threads prematurely.  This alternative way will become
@@ -22,15 +22,6 @@
    (Xavier Leroy, review by Florian Angeletti)
  
  ### Tools:
-diff --git a/VERSION b/VERSION
---- a/VERSION
-+++ b/VERSION
-@@ -1,4 +1,4 @@
--5.00.0+dev0-2021-11-05
-+5.0.0+dev0-2021-11-05
- 
- # Starting with OCaml 4.14, although the version string that appears above is
- # still correct and this file can thus still be used to figure it out,
 diff --git a/appveyor.yml b/appveyor.yml
 --- a/appveyor.yml
 +++ b/appveyor.yml
@@ -43,24 +34,12 @@
  #    - PORT: msvc64
  #      BOOTSTRAP_FLEXDLL: false
  #      BUILD_MODE: steps
-diff --git a/build-aux/ocaml_version.m4 b/build-aux/ocaml_version.m4
---- a/build-aux/ocaml_version.m4
-+++ b/build-aux/ocaml_version.m4
-@@ -32,7 +32,7 @@ m4_define([OCAML__DEVELOPMENT_VERSION], [true])
- # including the patchlevel, are mandatory.
- 
- m4_define([OCAML__VERSION_MAJOR], [5])
--m4_define([OCAML__VERSION_MINOR], [00])
-+m4_define([OCAML__VERSION_MINOR], [0])
- m4_define([OCAML__VERSION_PATCHLEVEL], [0])
- # Note that the OCAML__VERSION_EXTRA string defined below is always empty
- # for officially-released versions of OCaml.
 diff --git a/configure b/configure
 Binary files a/configure and b/configure differ
 diff --git a/configure.ac b/configure.ac
 --- a/configure.ac
 +++ b/configure.ac
-@@ -286,7 +286,7 @@ AC_ARG_ENABLE([unix-lib],
+@@ -288,7 +288,7 @@ AC_ARG_ENABLE([unix-lib],
  AC_ARG_ENABLE([bigarray-lib], [],
    [AS_IF([test "x$enableval" != 'xno'],
      [AC_MSG_ERROR(m4_normalize([The bigarray-lib option was deleted in OCaml
@@ -69,22 +48,23 @@
    [])
  
  AC_ARG_ENABLE([ocamldoc],
-@@ -314,12 +314,12 @@ AC_ARG_ENABLE([frame-pointers],
- 
- AC_ARG_ENABLE([naked-pointers], [],
-   [AS_IF([test "x$enableval" != 'xno'],
--    [AC_MSG_ERROR([Naked pointers were prohibited in OCaml 5.00.])])],
-+    [AC_MSG_ERROR([Naked pointers were prohibited in OCaml 5.0.])])],
-   [])
- 
- AC_ARG_ENABLE([naked-pointers-checker], [],
-   [AS_IF([test "x$enableval" != 'xno'],
--    [AC_MSG_ERROR([The naked pointers checker was removed in OCaml 5.00.])])],
-+    [AC_MSG_ERROR([The naked pointers checker was removed in OCaml 5.0.])])],
-   [])
+@@ -316,13 +316,13 @@ AC_ARG_ENABLE([frame-pointers],
  
- AC_ARG_ENABLE([spacetime], [],
-@@ -392,12 +392,12 @@ AC_ARG_VAR([WINDOWS_UNICODE_MODE],
+ dnl AC_ARG_ENABLE([naked-pointers], [],
+ dnl   [AS_IF([test "x$enableval" != 'xno'],
+-dnl     [AC_MSG_ERROR([Naked pointers were prohibited in OCaml 5.00.])])],
++dnl     [AC_MSG_ERROR([Naked pointers were prohibited in OCaml 5.0.])])],
+ dnl   [])
+ 
+ dnl AC_ARG_ENABLE([naked-pointers-checker], [],
+ dnl   [AS_IF([test "x$enableval" != 'xno'],
+ dnl     [AC_MSG_ERROR(m4_normalize([The naked pointers checker was removed in
+-dnl       OCaml 5.00.]))])],
++dnl       OCaml 5.0.]))])],
+ dnl   [])
+ AC_ARG_ENABLE([naked-pointers],
+   [AS_HELP_STRING([--disable-naked-pointers],
+@@ -402,12 +402,12 @@ AC_ARG_VAR([WINDOWS_UNICODE_MODE],
  
  AC_ARG_ENABLE([force-safe-string], [],
    [AS_IF([test "x$enableval" = 'xno'],
